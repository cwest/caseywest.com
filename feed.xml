<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Corner of Weeping</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://caseywest.com/feed.xml" />
<link rel="alternate" type="text/html" href="http://caseywest.com" />
<updated>2015-01-06T22:50:14-05:00</updated>
<id>http://caseywest.com/</id>
<author>
  <name>Casey West</name>
  <uri>http://caseywest.com/</uri>
  <email></email>
</author>


<entry>
  <title type="html"><![CDATA[Faster CI on Travis (and Docker) for Ruby (and Rails (and RuboCop))]]></title>
 <link rel="alternate" type="text/html" href="http://caseywest.com/faster-ci-on-travis-and-docker-for-ruby-and-rails-and-rubocop/" />
  <id>http://caseywest.com/faster-ci-on-travis-and-docker-for-ruby-and-rails-and-rubocop</id>
  <updated>2015-01-06 22:17:39 -0500T00:00:00-00:00</updated>
  <published>2015-01-06T00:00:00-05:00</published>
  
  <author>
    <name>Casey West</name>
    <uri>http://caseywest.com</uri>
    <email></email>
  </author>
  <content type="html">&lt;p&gt;If you read &lt;a href=&quot;/run-bundle-audit-from-rake/&quot;&gt;my post on running bundle-audit from rake&lt;/a&gt; you&#39;ll also know I run &lt;a href=&quot;https://github.com/bbatsov/rubocop&quot;&gt;RuboCop&lt;/a&gt; as part of continuous integration in &lt;a href=&quot;https://travis-ci.org&quot;&gt;Travis CI&lt;/a&gt;. Today I switched a project to run on Travis&#39; &lt;a href=&quot;http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/&quot;&gt;new docker infrastructure&lt;/a&gt; and something hilarious happened.&lt;/p&gt;

&lt;h1 id=&quot;running-travis-ci-on-docker&quot;&gt;Running Travis CI on Docker&lt;/h1&gt;

&lt;p&gt;This part is super easy. Amazingly easy. Add this to your &lt;code&gt;.travis.yml&lt;/code&gt; file:&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;comment&quot;&gt;# Docker Infrastructure&lt;/span&gt;
&lt;span class=&quot;key&quot;&gt;sudo&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;false&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;key&quot;&gt;cache&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;bundler&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;sudo&lt;/code&gt; key is the magic word to build your project in a Docker container. The &lt;code&gt;cache&lt;/code&gt; key will enable &lt;a href=&quot;http://bundler.io/&quot;&gt;bundler&lt;/a&gt; caching for your project.&lt;/p&gt;

&lt;p&gt;These two lines can speed up your build times by nearly eliminating startup costs. I went from 2.5 minutes to 24 seconds on builds which used the cache and archived images. I&#39;m running &lt;code&gt;bundle-audit&lt;/code&gt;, &lt;code&gt;brakeman&lt;/code&gt;, &lt;code&gt;rubocop&lt;/code&gt;, and &lt;code&gt;rspec&lt;/code&gt; in 24 seconds. That is awesome!&lt;/p&gt;

&lt;h1 id=&quot;the-funny-thing-is&quot;&gt;The funny thing is…&lt;/h1&gt;

&lt;p&gt;The first run I had a little hiccup. &lt;a href=&quot;https://github.com/bbatsov/rubocop&quot;&gt;RuboCop&lt;/a&gt; was doing its thing and, on this project, it only has 30 files to inspect. I know that because I just ran it locally and, yep, 30 files. In the Travis environment, however, it was scanning &lt;strong&gt;5320 files&lt;/strong&gt;. That&#39;s probably wrong.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;pullquote-right&quot; data-pullquote=&quot;by enabling the `cache` in Travis I caused RuboCop to lose its mind&quot;&gt;
Turns out, by enabling the &lt;code&gt;cache&lt;/code&gt; in Travis I caused RuboCop to lose its mind. How? Because of where the cache was stored. Travis put the cache in &lt;code&gt;vendor/bundle&lt;/code&gt; which is in my Rails app directory and within sight of RuboCop. That&#39;s legit, but I don&#39;t actually want RuboCop to check any vendor code.
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Why was RuboCop doing that? Because I wanted to &lt;code&gt;Exclude&lt;/code&gt; a few things in my Rails app—mostly generated code—so I had a &lt;code&gt;.rubocop.yml&lt;/code&gt; file that looked a little like this:&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;
&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;
&lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;
&lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;
&lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;
&lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;
&lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;
&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;key&quot;&gt;require&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;rubocop-rspec&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;key&quot;&gt;inherit_from&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;.rubocop_todo.yml&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;key&quot;&gt;AllCops&lt;/span&gt;:
  &lt;span class=&quot;key&quot;&gt;Exclude&lt;/span&gt;:
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;db/schema.rb&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;bin/**/*&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;config/initializers/devise.rb&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;config/initializers/simple_form*&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;db/migrate/*&#39;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;key&quot;&gt;RunRailsCops&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;true&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/bbatsov/rubocop/blob/master/config/default.yml#L28&quot;&gt;default RuboCop configuration&lt;/a&gt; &lt;em&gt;does&lt;/em&gt; exclude vendor. I need that, too, but my &lt;code&gt;Exclude&lt;/code&gt; above overrides the default, so it was gone.&lt;/p&gt;

&lt;h1 id=&quot;the-simple-fix&quot;&gt;The simple fix&lt;/h1&gt;

&lt;p&gt;Lets just add &lt;code&gt;vendor&lt;/code&gt; back into the exclusion list:&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;
&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;
&lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;
&lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;
&lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;
&lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;
&lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;
&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;
&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;key&quot;&gt;require&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;rubocop-rspec&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;key&quot;&gt;inherit_from&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;.rubocop_todo.yml&lt;/span&gt;&lt;/span&gt;
&lt;span class=&quot;key&quot;&gt;AllCops&lt;/span&gt;:
  &lt;span class=&quot;key&quot;&gt;Exclude&lt;/span&gt;:
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;db/schema.rb&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;bin/**/*&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;config/initializers/devise.rb&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;config/initializers/simple_form*&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;db/migrate/*&#39;&lt;/span&gt;&lt;/span&gt;
    - &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;&#39;vendor/**/*&#39;&lt;/span&gt;&lt;/span&gt;
  &lt;span class=&quot;key&quot;&gt;RunRailsCops&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;content&quot;&gt;true&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Voila!&lt;/p&gt;

&lt;p&gt;Be careful when modifying RuboCop&#39;s configuration that you copy what you need to keep from the defaults, because defining an entry in your project will discard the them, not merge them.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://caseywest.com/faster-ci-on-travis-and-docker-for-ruby-and-rails-and-rubocop/&quot;&gt;Faster CI on Travis (and Docker) for Ruby (and Rails (and RuboCop))&lt;/a&gt; was originally published by Casey West at &lt;a href=&quot;http://caseywest.com&quot;&gt;Corner of Weeping&lt;/a&gt; on January 06, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[There's Still No Silver Bullet (2006)]]></title>
 <link rel="alternate" type="text/html" href="http://caseywest.com/theres-still-no-silver-bullet/" />
  <id>http://caseywest.com/theres-still-no-silver-bullet</id>
  <updated>2015-01-04 01:36:18 -0500T00:00:00-00:00</updated>
  <published>2015-01-04T00:00:00-05:00</published>
  
  <author>
    <name>Casey West</name>
    <uri>http://caseywest.com</uri>
    <email></email>
  </author>
  <content type="html">&lt;blockquote&gt;
  &lt;p&gt;Originally published by me on &lt;a href=&quot;https://web.archive.org/web/20070729012936/http://blog.caseywest.com/2006/12/theres_still_no_silver_bullet_1.html&quot;&gt;December 18, 2006&lt;/a&gt; and reprinted here as-is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I recently read &lt;a href=&quot;http://en.wikipedia.org/wiki/Fred_Brooks&quot;&gt;Frederick P. Brooks, Jr.&#39;s&lt;/a&gt; essay &lt;a href=&quot;http://faculty.salisbury.edu/~xswang/Research/Papers/SERelated/no-silver-bullet.pdf&quot;&gt;No Silver Bullet: Essence and Accidents of Software Engineering&lt;/a&gt;. Brooks wrote this paper 20 years ago and it still rings true today. I like the whole essay and encourage you to read it if you haven&#39;t already.&lt;/p&gt;

&lt;p&gt;Brooks is an &lt;a href=&quot;http://www.brainyquote.com/quotes/authors/f/frederick_p_brooks_jr.html&quot;&gt;oft quoted&lt;/a&gt; writer. I&#39;m going to indulge in the practice by pointing out a few things from this essay that I think will always be true.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Likewise, a scaling-up of a software entity is not merely a repetition of the same elements in larger sizes, it is necessarily an increase in the number of different elements. In most cases, the elements interact with each other in some nonlinear fashion, and the complexity of the whole increases much more than linearly.&lt;/p&gt;

  &lt;p&gt;The complexity of software is an essential property, not an accidental one. Hence, descriptions of a software entity that abstract away its complexity often abstract away its essence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I really like this, because today there are &lt;a href=&quot;http://www.rubyonrails.org/&quot;&gt;a lot&lt;/a&gt; of &lt;a href=&quot;http://www.djangoproject.com/&quot;&gt;arguably excellent&lt;/a&gt; &lt;a href=&quot;http://www.turbogears.org/&quot;&gt;attempts&lt;/a&gt; to &lt;a href=&quot;http://jifty.org/&quot;&gt;abstract complexity&lt;/a&gt; in &lt;a href=&quot;http://www.ning.com/&quot;&gt;modern application development&lt;/a&gt;. Many software developers look to frameworks and application environments to manage the complexity of software development for them. These developers expect incredible gains in productivity by using a tool that makes building applications &quot;really easy.&quot; Don&#39;t be fooled. Tools help you build things, yes, but don&#39;t expect to get a pony when you install Ruby on Rails (although, as it happens, you do get a pony when you install Jifty). Frameworks are not 100% tools, they&#39;re 80% tools. If they were 100% tools then you wouldn&#39;t be making applications you&#39;d be writing configuration files. What kind of programmer writes configuration files for a fun?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In many cases, the software must conform because it is the most recent arrival on the scene. In others, it must conform because it is perceived as the most conformable. But in all cases, much complexity comes from conformation to other interfaces; this complexity cannot be simplified out by any redesign of the software alone.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This most obvious form of complexity through conformity in web applications is browser compatibility. I don&#39;t think that is the scenario that takes the cake, however. Anything relating to or interfacing with email clients increases complexity in an extremely non-linear fashion. There are other issues, too, such as representing information for RSS and Atom feeds. A lot of cruft exists around the edges of software because it must conform to its environment. You cannot simplify conformity within your software alone.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In spite of progress in restricting and simplifying the structures of software, they remain inherently unvisualizable, and thus do not permit the mind to use some of its most powerful conceptual tools. This lack not only impedes the process of design within one mind, it severely hinders communication among minds.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you&#39;ve ever worked with someone else when writing software you know this to be true. The inability to visualize software is a serious friction point between team members.&lt;/p&gt;

&lt;p&gt;When asked &lt;a href=&quot;https://web.archive.org/web/20070712044136/http://www.stifflog.com//2006//10//16//stiff-asks-great-programmers-answer//&quot;&gt;&quot;What do you think makes some programmers 10 or 100 times more productive than othes?&quot;&lt;/a&gt; &lt;a href=&quot;http://norvig.com/&quot;&gt;Peter Norvig&lt;/a&gt; answers, &quot;The ability to fit the whole problem into their heads at one time.&quot; That&#39;s often a critical ability and it speaks to Brooks&#39;s admission that software design is hard enough within a single mind. &lt;a href=&quot;http://www.loudthinking.com/&quot;&gt;David Heinemeier Hansson&lt;/a&gt; has a complimentary answer to the same question, &quot;The ability to restate hard problems as easy ones.&quot; Having the ability to clearly communicate software design is important, yes. I would add to these answers, &quot;The ability to explicitly articulate the design of complex software.&quot; Having these attributes brings you closer to making the invisible visible.&lt;/p&gt;

&lt;p&gt;Imagine how important these skills must be if you&#39;re building a geographically distributed team like &lt;a href=&quot;http://37signals.com&quot;&gt;37signals&lt;/a&gt; or &lt;a href=&quot;http://socialtext.com&quot;&gt;Socialtext&lt;/a&gt;? The lowest common denominator for being hired on these teams is likely expressed in the previous paragraph.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I do not believe we will find productivity magic here. Program verification is a very powerful concept, and it will be very important for such things as secure operating-system kernels. The technology does not promise, however, to save labor. Verifications are so much work that only a few substantial programs have ever been verified.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;20 years after writing this Brooks is still right. In context, Brooks is talking about &quot;test first&quot; methodologies here, asserting that testing during design and specification will not save you labor. He goes on:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;More seriously, even perfect program verification can only establish that a program meets its specification. The hardest part of the software task is arriving at a complete and consistent specification, and much of the essence of building a program is in fact the debugging of the specification.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In my opinion this statement is a key gem. I interpret this statement to be a nod to iterative development, suggesting that the imperfect art of testing our assumptions over time is a large part of the essence of software development. One could bastardize this as &quot;release early, release often.&quot; I feel that&#39;s an oversimplification that leaves large room for error.&lt;/p&gt;

&lt;p&gt;Taking time to design software is critical. I agree with &lt;a href=&quot;http://www.joelonsoftware.com/articles/fog0000000036.html&quot;&gt;Joel&lt;/a&gt; when he says &quot;Programmers and software engineers who dive into code without writing a spec tend to think they&#39;re cool gunslingers, shooting from the hip. They&#39;re not. They are terribly unproductive. They write bad code and produce shoddy software, and they threaten their projects by taking giant risks which are completely uncalled for.&quot;&lt;/p&gt;

&lt;p&gt;Let&#39;s skip to the end, to the real message within the message of the essence of software development:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hence, although I strongly support the technology-transfer and curriculumdevelopment efforts now under way, I think the most important single effort we can mount is to develop ways to grow great designers.&lt;/p&gt;

  &lt;p&gt;No software organization can ignore this challenge. Good managers, scarce though they be, are no scarcer than good designers. Great designers and great managers are both very rare. Most organizations spend considerable effort in finding and cultivating the management prospects; I know of none that spends equal effort in finding and developing the great designers upon whom the technical excellence of the products will ultimately depend.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This, I believe, is the most important advancement since Brooks wrote his paper. Organizations have recognized the need to grow great software designers. As a result the pace of development and product creation has increased dramatically. The state of the world is much better now than 1986 but we still have a long way to go.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://caseywest.com/theres-still-no-silver-bullet/&quot;&gt;There's Still No Silver Bullet (2006)&lt;/a&gt; was originally published by Casey West at &lt;a href=&quot;http://caseywest.com&quot;&gt;Corner of Weeping&lt;/a&gt; on January 04, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Run bundle-audit from rake]]></title>
 <link rel="alternate" type="text/html" href="http://caseywest.com/run-bundle-audit-from-rake/" />
  <id>http://caseywest.com/run-bundle-audit-from-rake</id>
  <updated>2015-01-03 00:07:06 -0500T00:00:00-00:00</updated>
  <published>2015-01-03T00:00:00-05:00</published>
  
  <author>
    <name>Casey West</name>
    <uri>http://caseywest.com</uri>
    <email></email>
  </author>
  <content type="html">&lt;p&gt;&lt;code&gt;bundle-audit&lt;/code&gt; is a command-line utility provided by the &lt;a href=&quot;https://github.com/rubysec/bundler-audit&quot;&gt;bundler-audit ruby gem&lt;/a&gt;. It does patch-level vulnerability scans on your Ruby dependencies by working with &lt;a href=&quot;http://bundler.io/&quot;&gt;bundler&lt;/a&gt; to inspect your project&#39;s &lt;code&gt;Gemfile.lock&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;I want to run &lt;code&gt;bundle-audit&lt;/code&gt; from a rake task in a Rails project. Here&#39;s how I did it.&lt;/p&gt;

&lt;p&gt;This is my &lt;code&gt;lib/tasks/bundle_audit.rake&lt;/code&gt; file.&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;
&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;
&lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;
&lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;
&lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;
&lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;
&lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;
&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;
&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;
&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;
&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;
&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;
&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;
&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;
&lt;a href=&quot;#n17&quot; name=&quot;n17&quot;&gt;17&lt;/a&gt;
&lt;a href=&quot;#n18&quot; name=&quot;n18&quot;&gt;18&lt;/a&gt;
&lt;a href=&quot;#n19&quot; name=&quot;n19&quot;&gt;19&lt;/a&gt;
&lt;strong&gt;&lt;a href=&quot;#n20&quot; name=&quot;n20&quot;&gt;20&lt;/a&gt;&lt;/strong&gt;
&lt;a href=&quot;#n21&quot; name=&quot;n21&quot;&gt;21&lt;/a&gt;
&lt;a href=&quot;#n22&quot; name=&quot;n22&quot;&gt;22&lt;/a&gt;
&lt;a href=&quot;#n23&quot; name=&quot;n23&quot;&gt;23&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;require &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;bundler/audit/cli&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;

namespace &lt;span class=&quot;symbol&quot;&gt;:bundle_audit&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
  desc &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Update bundle-audit database&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;
  task &lt;span class=&quot;symbol&quot;&gt;:update&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;constant&quot;&gt;Bundler&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Audit&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;CLI&lt;/span&gt;.new.update
  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;

  desc &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Check gems for vulns using bundle-audit&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;
  task &lt;span class=&quot;symbol&quot;&gt;:check&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;constant&quot;&gt;Bundler&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Audit&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;CLI&lt;/span&gt;.new.check
  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;

  desc &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Update vulns database and check gems using bundle-audit&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;
  task &lt;span class=&quot;symbol&quot;&gt;:run&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;bundle_audit:update&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].invoke
    &lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;bundle_audit:check&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].invoke
  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;

task &lt;span class=&quot;symbol&quot;&gt;:bundle_audit&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;bundle_audit:run&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].invoke
&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;It defines a few rasks under the &lt;code&gt;bundle_audit&lt;/code&gt; namespace. Thanks to the modular Ruby code built on top of &lt;a href=&quot;http://whatisthor.com/&quot;&gt;thor&lt;/a&gt; I had no trouble tapping directly into the command-line implementation for &lt;code&gt;bundle-audit&lt;/code&gt;.&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;
&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;$ rake -T bundle_audit
rake bundle_audit:check   # Check gems for vulns using bundle-audit
rake bundle_audit:run     # Update vulns database and check gems using bundle-audit
rake bundle_audit:update  # Update bundle-audit database
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Invocation is as easy as you can imagine. On the command-line:&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;
&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;
&lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;
&lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;
&lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;$ rake bundle_audit:run
Updating ruby-advisory-db ...
From https://github.com/rubysec/ruby-advisory-db
 * branch            master     -&amp;gt; FETCH_HEAD
Already up-to-date.
ruby-advisory-db: 108 advisories
No unpatched versions found
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;As you can see this does two things. First, it updates your local copy of the &lt;a href=&quot;https://github.com/rubysec/ruby-advisory-db&quot;&gt;ruby-advisory-db&lt;/a&gt;. Then it scans your gem dependency graph looking for unpatched dependencies. What you see above is the output when everything is OK.&lt;/p&gt;

&lt;p&gt;I also incorporated the check into my &lt;code&gt;rake test&lt;/code&gt; task, because I want my tests to fail if I&#39;m shipping with vulnerable dependencies. Here&#39;s what I have going on in &lt;code&gt;lib/tasks/test.rake&lt;/code&gt;:&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;
&lt;a href=&quot;#n4&quot; name=&quot;n4&quot;&gt;4&lt;/a&gt;
&lt;a href=&quot;#n5&quot; name=&quot;n5&quot;&gt;5&lt;/a&gt;
&lt;a href=&quot;#n6&quot; name=&quot;n6&quot;&gt;6&lt;/a&gt;
&lt;a href=&quot;#n7&quot; name=&quot;n7&quot;&gt;7&lt;/a&gt;
&lt;a href=&quot;#n8&quot; name=&quot;n8&quot;&gt;8&lt;/a&gt;
&lt;a href=&quot;#n9&quot; name=&quot;n9&quot;&gt;9&lt;/a&gt;
&lt;strong&gt;&lt;a href=&quot;#n10&quot; name=&quot;n10&quot;&gt;10&lt;/a&gt;&lt;/strong&gt;
&lt;a href=&quot;#n11&quot; name=&quot;n11&quot;&gt;11&lt;/a&gt;
&lt;a href=&quot;#n12&quot; name=&quot;n12&quot;&gt;12&lt;/a&gt;
&lt;a href=&quot;#n13&quot; name=&quot;n13&quot;&gt;13&lt;/a&gt;
&lt;a href=&quot;#n14&quot; name=&quot;n14&quot;&gt;14&lt;/a&gt;
&lt;a href=&quot;#n15&quot; name=&quot;n15&quot;&gt;15&lt;/a&gt;
&lt;a href=&quot;#n16&quot; name=&quot;n16&quot;&gt;16&lt;/a&gt;
&lt;a href=&quot;#n17&quot; name=&quot;n17&quot;&gt;17&lt;/a&gt;
&lt;a href=&quot;#n18&quot; name=&quot;n18&quot;&gt;18&lt;/a&gt;
&lt;a href=&quot;#n19&quot; name=&quot;n19&quot;&gt;19&lt;/a&gt;
&lt;strong&gt;&lt;a href=&quot;#n20&quot; name=&quot;n20&quot;&gt;20&lt;/a&gt;&lt;/strong&gt;
&lt;a href=&quot;#n21&quot; name=&quot;n21&quot;&gt;21&lt;/a&gt;
&lt;a href=&quot;#n22&quot; name=&quot;n22&quot;&gt;22&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;comment&quot;&gt;# Remove the Rails defaults.&lt;/span&gt;
&lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;test:all&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].clear
&lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;test:all:db&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].clear
&lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;test:db&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].clear
&lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].clear

namespace &lt;span class=&quot;symbol&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
  desc &lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;Run all tests&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;
  task &lt;span class=&quot;key&quot;&gt;all&lt;/span&gt;: &lt;span class=&quot;symbol&quot;&gt;:environment&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;bundle_audit&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].invoke
    &lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;brakeman:run&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].invoke
    &lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;rubocop&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].invoke
    &lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].invoke
  &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;

task &lt;span class=&quot;symbol&quot;&gt;:test&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;constant&quot;&gt;Rake&lt;/span&gt;::&lt;span class=&quot;constant&quot;&gt;Task&lt;/span&gt;[&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;test:all&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&#39;&lt;/span&gt;&lt;/span&gt;].invoke
&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;# Running `rake` should run all my tests.&lt;/span&gt;
task &lt;span class=&quot;key&quot;&gt;default&lt;/span&gt;: &lt;span class=&quot;symbol&quot;&gt;:test&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Since this is part of my testing expectations I can also rest easy because my continuous integration tool has my back on every change, too.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://caseywest.com/run-bundle-audit-from-rake/&quot;&gt;Run bundle-audit from rake&lt;/a&gt; was originally published by Casey West at &lt;a href=&quot;http://caseywest.com&quot;&gt;Corner of Weeping&lt;/a&gt; on January 03, 2015.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[2014's Podcast Recommendations]]></title>
 <link rel="alternate" type="text/html" href="http://caseywest.com/2014-s-podcast-recommendations/" />
  <id>http://caseywest.com/2014-s-podcast-recommendations</id>
  <updated>2014-12-31 18:42:03 -0500T00:00:00-00:00</updated>
  <published>2014-12-31T00:00:00-05:00</published>
  
  <author>
    <name>Casey West</name>
    <uri>http://caseywest.com</uri>
    <email></email>
  </author>
  <content type="html">&lt;p&gt;I listen to podcasts a lot. My gift to you for the new year is a selection of podcasts I really enjoyed in 2014.&lt;/p&gt;

&lt;p&gt;My recommendations are all audio-only because I&#39;m often listening during a commute, shower, walk, or as I&#39;m falling asleep. What did I miss?&lt;/p&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#storytelling&quot;&gt;Storytelling&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#serialhttpserialpodcastorg-by-this-american-life&quot;&gt;&lt;a href=&quot;http://serialpodcast.org/&quot;&gt;Serial&lt;/a&gt; by This American Life&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#this-american-lifehttpwwwthisamericanlifeorgpodcast&quot;&gt;&lt;a href=&quot;http://www.thisamericanlife.org/podcast&quot;&gt;This American Life&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#welcome-to-night-valehttppodbayfmshow536258179-by-commonplace-bookshttpcommonplacebookscom&quot;&gt;&lt;a href=&quot;http://podbay.fm/show/536258179&quot;&gt;Welcome to Night Vale&lt;/a&gt; by &lt;a href=&quot;http://commonplacebooks.com/&quot;&gt;Commonplace Books&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#radiolabhttpwwwradiolaborgseriespodcasts-by-wnychttpwwwwnycorg&quot;&gt;&lt;a href=&quot;http://www.radiolab.org/series/podcasts/&quot;&gt;Radiolab&lt;/a&gt; by &lt;a href=&quot;http://www.wnyc.org/&quot;&gt;WNYC&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#reply-allhttpgimletmediacomshowreply-all-by-gimlet-media&quot;&gt;&lt;a href=&quot;http://gimletmedia.com/show/reply-all/&quot;&gt;Reply All&lt;/a&gt; by Gimlet Media&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#startuphttpgimletmediacomshowstartup-by-gimlet-mediahttpgimletmediacom&quot;&gt;&lt;a href=&quot;http://gimletmedia.com/show/startup/&quot;&gt;StartUp&lt;/a&gt; by &lt;a href=&quot;http://gimletmedia.com/&quot;&gt;Gimlet Media&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#selected-shortshttpwwwselectedshortsorgpodcast-by-pri&quot;&gt;&lt;a href=&quot;http://www.selectedshorts.org/podcast/&quot;&gt;Selected Shorts&lt;/a&gt; by PRI&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ted-radio-hourhttpwwwnprorgrsspodcastpodcastdetailphpsiteid151446218-by-npr&quot;&gt;&lt;a href=&quot;http://www.npr.org/rss/podcast/podcast_detail.php?siteId=151446218&quot;&gt;TED Radio Hour&lt;/a&gt; by NPR&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#ideas&quot;&gt;Ideas&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ted-talks-audiohttpsitunesapplecomuspodcasttedtalks-audioid160904630&quot;&gt;&lt;a href=&quot;https://itunes.apple.com/us/podcast/tedtalks-audio/id160904630&quot;&gt;TED Talks Audio&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#ruby5httpruby5envylabscom&quot;&gt;&lt;a href=&quot;http://ruby5.envylabs.com/&quot;&gt;Ruby5&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#the-ruby-rogueshttpdevchattvruby-rogues-by-devchattvhttpdevchattv&quot;&gt;&lt;a href=&quot;http://devchat.tv/ruby-rogues&quot;&gt;The Ruby Rogues&lt;/a&gt; by &lt;a href=&quot;http://devchat.tv/&quot;&gt;DevChat.TV&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#the-changeloghttpthechangelogcom&quot;&gt;&lt;a href=&quot;http://thechangelog.com/&quot;&gt;The ChangeLog&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#current-events&quot;&gt;Current Events&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#wait-wait-dont-tell-mehttpwwwnprorgrsspodcastpodcastdetailphpsiteid344098540-by-npr&quot;&gt;&lt;a href=&quot;http://www.npr.org/rss/podcast/podcast_detail.php?siteId=344098540&quot;&gt;Wait Wait… Don&#39;t Tell Me!&lt;/a&gt; by NPR&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#the-rachel-maddow-showhttpwwwnbcnewscomid8132577tget-podcasts-nbc-news-msnbc-tv-nbcnewscomvksl4rf8v8-on-msnbc&quot;&gt;&lt;a href=&quot;http://www.nbcnews.com/id/8132577/t/get-podcasts-nbc-news-msnbc-tv-nbcnewscom/#.VKSL_4rF8v8&quot;&gt;The Rachel Maddow Show&lt;/a&gt; on MSNBC&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;storytelling&quot;&gt;Storytelling&lt;/h1&gt;

&lt;h2 id=&quot;serialhttpserialpodcastorg-by-this-american-life&quot;&gt;&lt;a href=&quot;http://serialpodcast.org/&quot;&gt;Serial&lt;/a&gt; by This American Life&lt;/h2&gt;

&lt;p&gt;This is obviously the breakout show of the year and it definitely got to me. &lt;a href=&quot;https://firstlook.org/theintercept/2014/12/29/exclusive-interview-jay-wilds-star-witness-adnan-syed-serial-case-pt-1/&quot;&gt;The post-series interview with Jay&lt;/a&gt; definitely keeps the mystery alive.&lt;/p&gt;

&lt;h2 id=&quot;this-american-lifehttpwwwthisamericanlifeorgpodcast&quot;&gt;&lt;a href=&quot;http://www.thisamericanlife.org/podcast&quot;&gt;This American Life&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;An essential standard.&lt;/p&gt;

&lt;h2 id=&quot;welcome-to-night-valehttppodbayfmshow536258179-by-commonplace-bookshttpcommonplacebookscom&quot;&gt;&lt;a href=&quot;http://podbay.fm/show/536258179&quot;&gt;Welcome to Night Vale&lt;/a&gt; by &lt;a href=&quot;http://commonplacebooks.com/&quot;&gt;Commonplace Books&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A slightly creepy news cast about a slightly creepy town. Goodnight, Night Vale. Goodnight.&lt;/p&gt;

&lt;h2 id=&quot;radiolabhttpwwwradiolaborgseriespodcasts-by-wnychttpwwwwnycorg&quot;&gt;&lt;a href=&quot;http://www.radiolab.org/series/podcasts/&quot;&gt;Radiolab&lt;/a&gt; by &lt;a href=&quot;http://www.wnyc.org/&quot;&gt;WNYC&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Great storytelling on a wide range of subjects.&lt;/p&gt;

&lt;h2 id=&quot;reply-allhttpgimletmediacomshowreply-all-by-gimlet-media&quot;&gt;&lt;a href=&quot;http://gimletmedia.com/show/reply-all/&quot;&gt;Reply All&lt;/a&gt; by Gimlet Media&lt;/h2&gt;

&lt;p&gt;Like it says, a show about the Internet. Fascinating stories about how the Internet shapes us and how we shape it.&lt;/p&gt;

&lt;h2 id=&quot;startuphttpgimletmediacomshowstartup-by-gimlet-mediahttpgimletmediacom&quot;&gt;&lt;a href=&quot;http://gimletmedia.com/show/startup/&quot;&gt;StartUp&lt;/a&gt; by &lt;a href=&quot;http://gimletmedia.com/&quot;&gt;Gimlet Media&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;A series (like Serial) of episodes recording the journey of one entrepreneur trying to start up.&lt;/p&gt;

&lt;h2 id=&quot;selected-shortshttpwwwselectedshortsorgpodcast-by-pri&quot;&gt;&lt;a href=&quot;http://www.selectedshorts.org/podcast/&quot;&gt;Selected Shorts&lt;/a&gt; by PRI&lt;/h2&gt;

&lt;p&gt;Short fiction read by actors. Makes me feel like the golden age of radio might still have a place.&lt;/p&gt;

&lt;h2 id=&quot;ted-radio-hourhttpwwwnprorgrsspodcastpodcastdetailphpsiteid151446218-by-npr&quot;&gt;&lt;a href=&quot;http://www.npr.org/rss/podcast/podcast_detail.php?siteId=151446218&quot;&gt;TED Radio Hour&lt;/a&gt; by NPR&lt;/h2&gt;

&lt;p&gt;This is an excellent mashup between TED talks and storytelling, often going behind the scenes or deeper into subjects presented at TED events.&lt;/p&gt;

&lt;h1 id=&quot;ideas&quot;&gt;Ideas&lt;/h1&gt;

&lt;h2 id=&quot;ted-talks-audiohttpsitunesapplecomuspodcasttedtalks-audioid160904630&quot;&gt;&lt;a href=&quot;https://itunes.apple.com/us/podcast/tedtalks-audio/id160904630&quot;&gt;TED Talks Audio&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;These folks are so awesome they compiled all the episodes available into a &lt;a href=&quot;http://blog.ted.com/2010/06/17/audio_podcasts/&quot;&gt;Google Spreadsheet&lt;/a&gt;. I prefer the audio format for listening on the go, but each episode does suggest &lt;em&gt;&quot;This talk contains powerful visuals.&quot;&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;ruby5httpruby5envylabscom&quot;&gt;&lt;a href=&quot;http://ruby5.envylabs.com/&quot;&gt;Ruby5&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Get five minutes of curated news about the Ruby and Ruby on Rails community twice a week (Tuesdays and Fridays).&lt;/p&gt;

&lt;h2 id=&quot;the-ruby-rogueshttpdevchattvruby-rogues-by-devchattvhttpdevchattv&quot;&gt;&lt;a href=&quot;http://devchat.tv/ruby-rogues&quot;&gt;The Ruby Rogues&lt;/a&gt; by &lt;a href=&quot;http://devchat.tv/&quot;&gt;DevChat.TV&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I have to be honest: this is hit or miss. In the last few months, though, it&#39;s been more hits than misses. I like the regulars on the show and someday I hope to be grilled by them about technical leadership. If I am so lucky…&lt;/p&gt;

&lt;h2 id=&quot;the-changeloghttpthechangelogcom&quot;&gt;&lt;a href=&quot;http://thechangelog.com/&quot;&gt;The ChangeLog&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;I like how polyglot this podcast is. Lots of communities get play including, for the first time, Perl just a couple weeks ago. Their [website] also has a nice link blog of interesting open source projects. Keep an eye on it.&lt;/p&gt;

&lt;h1 id=&quot;current-events&quot;&gt;Current Events&lt;/h1&gt;

&lt;h2 id=&quot;wait-wait-dont-tell-mehttpwwwnprorgrsspodcastpodcastdetailphpsiteid344098540-by-npr&quot;&gt;&lt;a href=&quot;http://www.npr.org/rss/podcast/podcast_detail.php?siteId=344098540&quot;&gt;Wait Wait… Don&#39;t Tell Me!&lt;/a&gt; by NPR&lt;/h2&gt;

&lt;p&gt;Family favorite every weekend.&lt;/p&gt;

&lt;h2 id=&quot;the-rachel-maddow-showhttpwwwnbcnewscomid8132577tget-podcasts-nbc-news-msnbc-tv-nbcnewscomvksl4rf8v8-on-msnbc&quot;&gt;&lt;a href=&quot;http://www.nbcnews.com/id/8132577/t/get-podcasts-nbc-news-msnbc-tv-nbcnewscom/#.VKSL_4rF8v8&quot;&gt;The Rachel Maddow Show&lt;/a&gt; on MSNBC&lt;/h2&gt;

&lt;p&gt;Scroll to the bottom of that page for podcast subscription links. &lt;em&gt;Warning: political alignment obvious.&lt;/em&gt;&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://caseywest.com/2014-s-podcast-recommendations/&quot;&gt;2014's Podcast Recommendations&lt;/a&gt; was originally published by Casey West at &lt;a href=&quot;http://caseywest.com&quot;&gt;Corner of Weeping&lt;/a&gt; on December 31, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Hootsuite Has Best Response to Criticism]]></title>
 <link rel="alternate" type="text/html" href="https://www.youtube.com/watch?v=bXizarnDodE" />
  <id>http://caseywest.com/hootsuite-has-best-response-to-criticism</id>
  <updated>2014-12-30 15:22:50 -0500T00:00:00-00:00</updated>
  <published>2014-12-30T00:00:00-05:00</published>
  
  <author>
    <name>Casey West</name>
    <uri>http://caseywest.com</uri>
    <email></email>
  </author>
  <content type="html">&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/bXizarnDodE&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;This is the gold standard. Customers were unhappy. Hootsuite heard them, were awesomely transparent, and did something about it.&lt;/p&gt;

&lt;p&gt;I have a thing for transparency. I think it makes most situations better. It takes courage to be open about shortcomings, even as a team, and to address them in the open. What Hootsuite did here is wonderful, and can be applied to any software team&#39;s circumstances.&lt;/p&gt;

&lt;p&gt;Maybe you are one of many teams in a large company and you want to be more transparent than the current culture accepts, or maybe like Hootsuite it&#39;s your whole company. Either way I encourage you to have the courage to be as transparent as possible and get other people to join in. It&#39;s liberating, and it&#39;s much less work than the alternative.&lt;/p&gt;

&lt;p&gt;With this kind of response Hootsuite shows they&#39;re open and accepting of criticism and they&#39;ll do something about it. They proved it&#39;s safe to give them feedback. Encouraged, even. They now have a reputation for courage and conviction, and for caring more about what they do than protecting themselves. That&#39;s one hell of a great reputation to build.&lt;/p&gt;

&lt;p&gt;Their CEO, Ryan Holmes, wrote more about it &lt;a href=&quot;https://www.linkedin.com/pulse/20141113221604-2967511--your-product-is-a-piece-of-sh-t-how-my-company-responded-to-this-tweet?trk=mp-reader-card&quot;&gt;on LinkedIn.&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://caseywest.com/hootsuite-has-best-response-to-criticism/&quot;&gt;Hootsuite Has Best Response to Criticism&lt;/a&gt; was originally published by Casey West at &lt;a href=&quot;http://caseywest.com&quot;&gt;Corner of Weeping&lt;/a&gt; on December 30, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Integrated Tests Are a Scam]]></title>
 <link rel="alternate" type="text/html" href="http://vimeo.com/80533536" />
  <id>http://caseywest.com/integrated-tests-are-a-scam</id>
  <published>2014-12-29T14:24:02-05:00</published>
  <updated>2014-12-29T14:24:02-05:00</updated>
  <author>
    <name>Casey West</name>
    <uri>http://caseywest.com</uri>
    <email></email>
  </author>
  <content type="html">&lt;p&gt;This is an excellent conference talk laying out the core problem with reliance on integrated tests&lt;sup id=&quot;fnref:integrated_tests&quot;&gt;&lt;a href=&quot;#fn:integrated_tests&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;. I&#39;ve seen this problem at several companies. Here are the steps to reproduce:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Build a complicated system organically.&lt;/li&gt;
  &lt;li&gt;Observe quality degrade.&lt;/li&gt;
  &lt;li&gt;Declare testing a panacea.&lt;/li&gt;
  &lt;li&gt;Build a large, QA-lead integrated test suite at great cost.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now a huge, brittle test suite exists which provides no direct value to development, where it&#39;s needed most, and doesn&#39;t address the root problem: poor system design.&lt;/p&gt;

&lt;h2 id=&quot;integrated-test-hell&quot;&gt;Integrated test hell.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jbrains.ca/&quot;&gt;J.B. Rainsberger&lt;/a&gt; describes the problem well. If your project has a monolithic, external test suite which relies on the entire architecture to run you are in this special hell right now. The clearest representation I can think of is his explanation of how many tests you&#39;d have to write to get value out of an &lt;em&gt;integrated tests&lt;/em&gt; versus &lt;em&gt;isolated tests&lt;/em&gt;&lt;sup id=&quot;fnref:isolated_tests&quot;&gt;&lt;a href=&quot;#fn:isolated_tests&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;A software architecture with a few interconnected components (lets say, for example: a database, REST API, UI, Job Queue) requires tests for each function of each component. If we&#39;re relying on &lt;em&gt;integrated tests&lt;/em&gt; we have to write tests to exercise every function of every component, and every combination of connections between every function of every component. As you write that software you need to write &lt;script type=&quot;math/tex&quot;&gt; O(n!) &lt;/script&gt; integrated tests. You can&#39;t write that many tests. You don&#39;t have enough time to write enough tests to have confidence in that system. That&#39;s scary. &lt;strong&gt;That&#39;s impossible.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-cycle&quot;&gt;The cycle.&lt;/h2&gt;

&lt;p&gt;I love this because it&#39;s clear and true. We&#39;ve all seen this run-on sentence loop:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;100% of our integrated tests pass but there&#39;s a mistake&lt;sup id=&quot;fnref:mistake&quot;&gt;&lt;a href=&quot;#fn:mistake&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt; in our software&lt;/strong&gt;; so we write more integrated tests to fill in the cracks which allows us to design more sloppily and gives us more opportunities for mistakes, and spending time on integrated tests means less time for isolated tests which increases the likelihood that &lt;strong&gt;100% of the tests pass but we still have mistakes.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-should-you-do-about-this&quot;&gt;What should you do about this?&lt;/h2&gt;

&lt;p&gt;There is a strong correlation between large numbers of integrated tests and design problems. Integrated tests don&#39;t offer any pressure to improve our designs. Isolated tests do. Stop pretending integrated tests are helping you. Write isolated tests. &lt;/p&gt;

&lt;p&gt;To quote J.B.:&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;pullquote-right&quot; data-pullquote=&quot;the whole point of test driven development is not to do testing; it&amp;apos;s to learn about the quality of our design&quot;&gt; 
&lt;em&gt;The real benefit of isolated tests — testing one function at a time — is that those tests put tremendous pressure on our designs. Those tests are the ones that make it most clear where our design problems are. &lt;strong&gt;Remember that the whole point of test driven development is not to do testing; it&#39;s to learn about the quality of our design.&lt;/strong&gt; We use the theory that if our design has problems then the tests will be hard to write. The tests will be hard to understand. It&#39;ll be difficult to write these small, isolated tests to check one thing at a time.&lt;/em&gt;
&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;If you have more &lt;em&gt;isolated tests&lt;/em&gt; than &lt;em&gt;integrated tests&lt;/em&gt; chances are you have a decent design with clear interfaces and contracts between collaborating systems. This path is cheaper, faster, less likely to allow mistakes, and provides high-bandwith feedback on the quality of your software design. As you write this software you need to write &lt;script type=&quot;math/tex&quot;&gt; O(n) &lt;/script&gt; isolated tests.&lt;/p&gt;

&lt;p&gt;You don&#39;t have to multiply the code paths in your system to get thorough coverage, you can just add them. You go from a combinatorial explosion of tests-to-code-paths to a linear increase in tests. &lt;strong&gt;That&#39;s possible.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;There&#39;s a lot of gold in this talk. Watch it. Twice!&lt;/p&gt;

&lt;iframe width=&quot;500&quot; height=&quot;281&quot; src=&quot;http://player.vimeo.com/video/80533536 &quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:integrated_tests&quot;&gt;
      &lt;p&gt;Not to be confused with &lt;em&gt;integration tests&lt;/em&gt; (referred to in this talk as &lt;em&gt;collaboration tests&lt;/em&gt;). Integrated tests require a complete, integrated architecture to run. &lt;em&gt;Integration tests&lt;/em&gt; simply test the collaboration between independent components. &lt;a href=&quot;#fnref:integrated_tests&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:isolated_tests&quot;&gt;
      &lt;p&gt;&lt;em&gt;Isolated tests&lt;/em&gt; is a good name for tests operating on a specific function within a software architecture which exercise that function directly, in isolation, independent of any external collaborators in the architecture. &lt;a href=&quot;#fnref:isolated_tests&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:mistake&quot;&gt;
      &lt;p&gt;Sometimes we call these defects or bugs; I agree with the speaker that&#39;s too abstract. It&#39;s a human error (more likely a series of human errors). Everywhere else in the world we call those mistakes. &lt;a href=&quot;#fnref:mistake&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;

  &lt;p&gt;&lt;a href=&quot;http://caseywest.com/integrated-tests-are-a-scam/&quot;&gt;Integrated Tests Are a Scam&lt;/a&gt; was originally published by Casey West at &lt;a href=&quot;http://caseywest.com&quot;&gt;Corner of Weeping&lt;/a&gt; on December 29, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Your Software Is Made of People]]></title>
 <link rel="alternate" type="text/html" href="http://caseywest.com/your-software-is-made-of-people/" />
  <id>http://caseywest.com/your-software-is-made-of-people</id>
  <published>2014-12-24T10:00:22-05:00</published>
  <updated>2014-12-24T10:00:22-05:00</updated>
  <author>
    <name>Casey West</name>
    <uri>http://caseywest.com</uri>
    <email></email>
  </author>
  <content type="html">&lt;p&gt;I was talking with someone the other day about my time as (Interim) VP of Engineering at &lt;a href=&quot;http://socialtext.com&quot;&gt;Socialtext&lt;/a&gt;. Did I enjoy that? The question was framed like this: some people just like doing things and not dealing with the social aspects of management. But I wonder, are they really much different?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Originally published by me on &lt;a href=&quot;https://web.archive.org/web/20090416185738/http://caseywest.com/2009/03/25/your-software-is-made-of-people/&quot;&gt;March 25, 2009&lt;/a&gt; and reprinted here as-is.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Software development is creating, maintaining, and evolving a system. Use whatever action verb you like, you are working with a system. That system can be made better or worse by your actions. If you fix a bug the system is better. Remove a networking bottleneck? Better. Introduce a needless database query on every iteration of a loop? Worse.&lt;/p&gt;

&lt;p&gt;Software doesn’t work in isolation. The system is bigger than that. If you increase the memory requirements for your software the servers had better have enough memory to manage it. If you rewrite your code in Python a host of changes are required to make that change possible.&lt;/p&gt;

&lt;p&gt;How are teams much different? Leading a team requires the creation, maintenance, and evolution of a system. Again, you can make it better or worse. Help a peer solve a problem with a better tool then your system is better. Reduce needless process? Better. Introduce a needless process on every iteration of development? Worse.&lt;/p&gt;

&lt;p&gt;I think both people and technology are irrevocably intertwined. In fact, hacking on one and not the other will cause the performance of both to suffer. This is called &lt;a href=&quot;http://en.wikipedia.org/wiki/Sociotechnical_systems_theory&quot;&gt;Sociotechnical Systems Theory&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;joint-optimization&quot;&gt;Joint Optimization&lt;/h1&gt;

&lt;p&gt;A team survives - and eventually thrives - through the &lt;em&gt;joint optimization&lt;/em&gt; of their sociological and technological systems. Improving one alone often leads to recessive tendencies in the other. The nature of a team is the symbiotic relationship between its people and technology systems. Success can’t be realized by improving technology alone.&lt;/p&gt;

&lt;p&gt;This concept is often hard for everyone. Technologists find it easy to ignore social aspects of an organization. Non-technical specialists are reluctant to consider the artificial reality of technical objects like software. So it can be hard to consider both technical and social aspects of a system.&lt;/p&gt;

&lt;p&gt;The delivery of meaningful value to customers requires the actions of both people and technical objects. One can’t improve without the other. &lt;a href=&quot;http://scholar.lib.vt.edu/ejournals/SPT/v4_n3html/ROPOHL.html&quot;&gt;Technical achievement is equally as important as social advancement.&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;people-are-part-of-technical-strategy&quot;&gt;People are (part of) Technical Strategy&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://alexandria.tue.nl/extra2/200211694.pdf&quot;&gt;Hacking on the social realities in your technology team has strategic value.&lt;/a&gt; A healthy team can do more than generate fantastic technological innovations because a healthy team can more accurately assess the environment they’re in. A viable business strategy can’t simply focus on organizational capabilities as most technologists are prone to do. The environment your team operates in isn’t the primary strategic factor as many non-technical specialists see it.&lt;/p&gt;

&lt;p&gt;The decision isn’t either/or among organizational capability and environmental reality. The winning strategy is both/and: react to environmental realities within the context of current and improved organizational capabilities.&lt;/p&gt;

&lt;h2 id=&quot;the-api-is-different&quot;&gt;The API is Different&lt;/h2&gt;

&lt;p&gt;The major difference between people and software on a technical team is the API. You’re still debugging, refactoring, creating, evolving, and removing what you don’t need. As a technical team leader you need to talk to both types of interfaces. The API is very different for debugging people vs. debugging software.&lt;/p&gt;

&lt;p&gt;If you want to build world class software you have to build a world class team.&lt;/p&gt;

&lt;p&gt;This is also why it’s hard for a star programmer to become a star manager. They never spent time learning the People API.&lt;/p&gt;

&lt;h2 id=&quot;footnote&quot;&gt;Footnote&lt;/h2&gt;

&lt;p&gt;Some of this thinking was done as research for a previous company. I was asked in appropriately vague terms how to fix our software delivery process. The pain was that it took months to get even the smallest changes to the customer. When I searched for the root of the problem it became clear there were two intertwined problems: one technical and the other social.&lt;/p&gt;

&lt;p&gt;Half the company was looking for a quick technical fix that would make it all better. The other half wanted to add process to over come the social issues. It was obvious to me we would have to fix both if we really wanted to solve the problem. Any solution that ignored the fact that we were a socio-technical organization was lacking.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://caseywest.com/your-software-is-made-of-people/&quot;&gt;Your Software Is Made of People&lt;/a&gt; was originally published by Casey West at &lt;a href=&quot;http://caseywest.com&quot;&gt;Corner of Weeping&lt;/a&gt; on December 24, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[hello, world]]></title>
 <link rel="alternate" type="text/html" href="http://caseywest.com/hello-world/" />
  <id>http://caseywest.com/hello-world</id>
  <published>2014-12-24T09:40:52-05:00</published>
  <updated>2014-12-24T09:40:52-05:00</updated>
  <author>
    <name>Casey West</name>
    <uri>http://caseywest.com</uri>
    <email></email>
  </author>
  <content type="html">&lt;p&gt;As most of us know by now it was Brian Kernighan who wrote the first known &lt;a href=&quot;https://en.wikipedia.org/wiki/%22Hello,_world!%22_program&quot;&gt;hello, world&lt;/a&gt; program:&lt;/p&gt;

&lt;div&gt;&lt;table class=&quot;CodeRay&quot;&gt;&lt;tr&gt;
  &lt;td class=&quot;line-numbers&quot;&gt;&lt;pre&gt;&lt;a href=&quot;#n1&quot; name=&quot;n1&quot;&gt;1&lt;/a&gt;
&lt;a href=&quot;#n2&quot; name=&quot;n2&quot;&gt;2&lt;/a&gt;
&lt;a href=&quot;#n3&quot; name=&quot;n3&quot;&gt;3&lt;/a&gt;
&lt;/pre&gt;&lt;/td&gt;
  &lt;td class=&quot;code&quot;&gt;&lt;pre&gt;main( ) {
        printf(&lt;span class=&quot;string&quot;&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;content&quot;&gt;hello, world&lt;/span&gt;&lt;span class=&quot;delimiter&quot;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;);
}
&lt;/pre&gt;&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Hello, world!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://caseywest.com/hello-world/&quot;&gt;hello, world&lt;/a&gt; was originally published by Casey West at &lt;a href=&quot;http://caseywest.com&quot;&gt;Corner of Weeping&lt;/a&gt; on December 24, 2014.&lt;/p&gt;</content>
</entry>

</feed>
